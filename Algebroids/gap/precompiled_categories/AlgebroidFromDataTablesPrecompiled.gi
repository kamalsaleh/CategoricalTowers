# SPDX-License-Identifier: GPL-2.0-or-later
# Algebroids: Algebroids and bialgebroids as preadditive categories generated by enhanced quivers
#
# Implementations
#
BindGlobal( "ADD_FUNCTIONS_FOR_AlgebroidFromDataTablesPrecompiled", function ( cat )
    
    ##
    AddAdditionForMorphisms( cat,
        
########
function ( cat_1, a_1, b_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, Source( a_1 ), Range( a_1 ), MorphismCoefficients, Sum( [ MorphismCoefficients( a_1 ), MorphismCoefficients( b_1 ) ] ) );
end
########
        
    , 100 );
    
    ##
    AddAdditiveInverseForMorphisms( cat,
        
########
function ( cat_1, a_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, Source( a_1 ), Range( a_1 ), MorphismCoefficients, List( MorphismCoefficients( a_1 ), AdditiveInverseSameMutability ) );
end
########
        
    , 100 );
    
    ##
    AddBasisOfExternalHom( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    return SetOfBasesOfExternalHomsLazyHList( cat_1 )[ObjectIndex( arg2_1 )][ObjectIndex( arg3_1 )];
end
########
        
    , 100 );
    
    ##
    AddCoefficientsOfMorphism( cat,
        
########
function ( cat_1, arg2_1 )
    return MorphismCoefficients( arg2_1 );
end
########
        
    , 100 );
    
    ##
    AddDistinguishedObjectOfHomomorphismStructure( cat,
        
########
function ( cat_1 )
    return CreateCapCategoryObjectWithAttributes( RangeCategoryOfHomomorphismStructure( cat_1 ), RankOfObject, 1 );
end
########
        
    , 100 );
    
    ##
    AddHomomorphismStructureOnMorphismsWithGivenObjects( cat,
        
########
function ( cat_1, source_1, alpha_1, beta_1, range_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, deduped_5_1, deduped_6_1, deduped_7_1, deduped_8_1, deduped_9_1, deduped_10_1;
    deduped_10_1 := CommutativeRingOfLinearCategory( cat_1 );
    deduped_9_1 := RangeCategoryOfHomomorphismStructure( cat_1 );
    deduped_8_1 := MorphismSupport( beta_1 );
    deduped_7_1 := MorphismSupport( alpha_1 );
    deduped_6_1 := RankOfObject( range_1 );
    deduped_5_1 := RankOfObject( source_1 );
    if deduped_5_1 = 0 or deduped_6_1 = 0 or (IsEmpty( deduped_7_1 ) or IsEmpty( deduped_8_1 )) then
        return CreateCapCategoryMorphismWithAttributes( deduped_9_1, source_1, range_1, UnderlyingMatrix, HomalgZeroMatrix( deduped_5_1, deduped_6_1, deduped_10_1 ) );
    else
        hoisted_3_1 := MorphismCoefficients( beta_1 );
        hoisted_2_1 := MorphismCoefficients( alpha_1 );
        hoisted_1_1 := CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( EnhancedDataTables( cat_1 )[21][ObjectIndex( Source( alpha_1 ) )] )[ObjectIndex( Range( alpha_1 ) )] )[ObjectIndex( Source( beta_1 ) )] )[ObjectIndex( Range( beta_1 ) )] );
        return CreateCapCategoryMorphismWithAttributes( deduped_9_1, source_1, range_1, UnderlyingMatrix, HomalgMatrixListList( Sum( List( deduped_7_1, function ( l_2 )
                      local hoisted_1_2, hoisted_2_2;
                      hoisted_2_2 := hoisted_2_1[l_2];
                      hoisted_1_2 := CAP_JIT_INCOMPLETE_LOGIC( hoisted_1_1[l_2] );
                      return Sum( List( deduped_8_1, function ( r_3 )
                                local hoisted_1_3;
                                hoisted_1_3 := hoisted_2_2 * hoisted_3_1[r_3];
                                return List( CAP_JIT_INCOMPLETE_LOGIC( hoisted_1_2[r_3] ), function ( x_4 )
                                        return List( x_4, function ( y_5 )
                                                return hoisted_1_3 * y_5;
                                            end );
                                    end );
                            end ) );
                  end ) ), deduped_5_1, deduped_6_1, deduped_10_1 ) );
    fi;
    return;
end
########
        
    , 100 );
    
    ##
    AddHomomorphismStructureOnObjects( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    return CreateCapCategoryObjectWithAttributes( RangeCategoryOfHomomorphismStructure( cat_1 ), RankOfObject, EnhancedDataTables( cat_1 )[20][ObjectIndex( arg2_1 )][ObjectIndex( arg3_1 )] );
end
########
        
    , 100 );
    
    ##
    AddIdentityMorphism( cat,
        
########
function ( cat_1, a_1 )
    local deduped_1_1, deduped_2_1;
    deduped_2_1 := EnhancedDataTables( cat_1 );
    deduped_1_1 := ObjectIndex( a_1 );
    return SetOfBasesOfExternalHomsLazyHList( cat_1 )[deduped_1_1][deduped_1_1][SafePosition( deduped_2_1[17][deduped_1_1][deduped_1_1], deduped_2_1[5][deduped_1_1] )];
end
########
        
    , 100 );
    
    ##
    AddInterpretMorphismAsMorphismFromDistinguishedObjectToHomomorphismStructure( cat,
        
########
function ( cat_1, alpha_1 )
    local morphism_attr_1_1, deduped_2_1;
    deduped_2_1 := RangeCategoryOfHomomorphismStructure( cat_1 );
    morphism_attr_1_1 := HomalgRowVector( MorphismCoefficients( alpha_1 ), EnhancedDataTables( cat_1 )[20][ObjectIndex( Source( alpha_1 ) )][ObjectIndex( Range( alpha_1 ) )], CommutativeRingOfLinearCategory( cat_1 ) );
    return CreateCapCategoryMorphismWithAttributes( deduped_2_1, CreateCapCategoryObjectWithAttributes( deduped_2_1, RankOfObject, 1 ), CreateCapCategoryObjectWithAttributes( deduped_2_1, RankOfObject, NumberColumns( morphism_attr_1_1 ) ), UnderlyingMatrix, morphism_attr_1_1 );
end
########
        
    , 100 );
    
    ##
    AddInterpretMorphismAsMorphismFromDistinguishedObjectToHomomorphismStructureWithGivenObjects( cat,
        
########
function ( cat_1, source_1, alpha_1, range_1 )
    local morphism_attr_1_1, deduped_2_1;
    deduped_2_1 := RangeCategoryOfHomomorphismStructure( cat_1 );
    morphism_attr_1_1 := HomalgRowVector( MorphismCoefficients( alpha_1 ), RankOfObject( range_1 ), CommutativeRingOfLinearCategory( cat_1 ) );
    return CreateCapCategoryMorphismWithAttributes( deduped_2_1, CreateCapCategoryObjectWithAttributes( deduped_2_1, RankOfObject, 1 ), range_1, UnderlyingMatrix, morphism_attr_1_1 );
end
########
        
    , 100 );
    
    ##
    AddInterpretMorphismFromDistinguishedObjectToHomomorphismStructureAsMorphism( cat,
        
########
function ( cat_1, source_1, range_1, alpha_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, source_1, range_1, MorphismCoefficients, EntriesOfHomalgMatrix( UnderlyingMatrix( alpha_1 ) ) );
end
########
        
    , 100 );
    
    ##
    AddIsCongruentForMorphisms( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    return MorphismCoefficients( arg2_1 ) = MorphismCoefficients( arg3_1 );
end
########
        
    , 100 );
    
    ##
    AddIsEqualForMorphisms( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    return MorphismCoefficients( arg2_1 ) = MorphismCoefficients( arg3_1 );
end
########
        
    , 100 );
    
    ##
    AddIsEqualForObjects( cat,
        
########
function ( cat_1, arg2_1, arg3_1 )
    return ObjectIndex( arg2_1 ) = ObjectIndex( arg3_1 );
end
########
        
    , 100 );
    
    ##
    AddIsWellDefinedForMorphisms( cat,
        
########
function ( cat_1, arg2_1 )
    return EnhancedDataTables( cat_1 )[20][ObjectIndex( Source( arg2_1 ) )][ObjectIndex( Range( arg2_1 ) )] = Length( MorphismCoefficients( arg2_1 ) );
end
########
        
    , 100 );
    
    ##
    AddIsWellDefinedForObjects( cat,
        
########
function ( cat_1, arg2_1 )
    local deduped_1_1;
    deduped_1_1 := ObjectIndex( arg2_1 );
    return 0 < deduped_1_1 and deduped_1_1 <= EnhancedDataTables( cat_1 )[2];
end
########
        
    , 100 );
    
    ##
    AddMorphismConstructor( cat,
        
########
function ( cat_1, arg2_1, arg3_1, arg4_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, arg2_1, arg4_1, MorphismCoefficients, arg3_1 );
end
########
        
    , 100 );
    
    ##
    AddMorphismDatum( cat,
        
########
function ( cat_1, arg2_1 )
    return MorphismCoefficients( arg2_1 );
end
########
        
    , 100 );
    
    ##
    AddMultiplyWithElementOfCommutativeRingForMorphisms( cat,
        
########
function ( cat_1, r_1, a_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, Source( a_1 ), Range( a_1 ), MorphismCoefficients, r_1 * MorphismCoefficients( a_1 ) );
end
########
        
    , 100 );
    
    ##
    AddObjectConstructor( cat,
        
########
function ( cat_1, arg2_1 )
    return SetOfObjects( cat_1 )[arg2_1];
end
########
        
    , 100 );
    
    ##
    AddObjectDatum( cat,
        
########
function ( cat_1, arg2_1 )
    return ObjectIndex( arg2_1 );
end
########
        
    , 100 );
    
    ##
    AddPreCompose( cat,
        
########
function ( cat_1, alpha_1, beta_1 )
    local hoisted_1_1, hoisted_2_1, hoisted_3_1, deduped_5_1, deduped_6_1, deduped_7_1, deduped_8_1, deduped_9_1, deduped_10_1, deduped_11_1, deduped_12_1, deduped_13_1, deduped_14_1, deduped_15_1, deduped_16_1, deduped_17_1, deduped_18_1, deduped_19_1;
    deduped_19_1 := CommutativeRingOfLinearCategory( cat_1 );
    deduped_18_1 := MorphismSupport( beta_1 );
    deduped_17_1 := MorphismSupport( alpha_1 );
    deduped_16_1 := EnhancedDataTables( cat_1 );
    deduped_15_1 := Range( beta_1 );
    deduped_14_1 := Source( alpha_1 );
    deduped_13_1 := ObjectIndex( deduped_15_1 );
    deduped_12_1 := ObjectIndex( deduped_14_1 );
    deduped_11_1 := ObjectIndex( Source( beta_1 ) );
    deduped_10_1 := ObjectIndex( Range( alpha_1 ) );
    deduped_9_1 := deduped_16_1[20];
    deduped_8_1 := deduped_9_1[deduped_12_1][deduped_13_1];
    deduped_7_1 := deduped_9_1[deduped_10_1][deduped_11_1];
    deduped_6_1 := CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( SetOfBasesOfExternalHomsLazyHList( cat_1 )[deduped_10_1] )[deduped_10_1] )[SafePosition( deduped_16_1[17][deduped_10_1][deduped_10_1], deduped_16_1[5][deduped_10_1] )] );
    deduped_5_1 := HomalgRowVector( MorphismCoefficients( deduped_6_1 ), deduped_9_1[ObjectIndex( Source( deduped_6_1 ) )][ObjectIndex( Range( deduped_6_1 ) )], deduped_19_1 );
    hoisted_3_1 := MorphismCoefficients( beta_1 );
    hoisted_2_1 := MorphismCoefficients( alpha_1 );
    hoisted_1_1 := CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( CAP_JIT_INCOMPLETE_LOGIC( deduped_16_1[21][deduped_12_1] )[deduped_10_1] )[deduped_11_1] )[deduped_13_1] );
    return CreateCapCategoryMorphismWithAttributes( cat_1, deduped_14_1, deduped_15_1, MorphismCoefficients, IdFunc( function (  )
                if deduped_7_1 = 0 or deduped_8_1 = 0 or (IsEmpty( deduped_17_1 ) or IsEmpty( deduped_18_1 )) then
                    return EntriesOfHomalgMatrix( deduped_5_1 * HomalgZeroMatrix( deduped_7_1, deduped_8_1, deduped_19_1 ) );
                else
                    return EntriesOfHomalgMatrix( deduped_5_1 * HomalgMatrixListList( Sum( List( deduped_17_1, function ( l_3 )
                                    local hoisted_1_3, hoisted_2_3;
                                    hoisted_2_3 := hoisted_2_1[l_3];
                                    hoisted_1_3 := CAP_JIT_INCOMPLETE_LOGIC( hoisted_1_1[l_3] );
                                    return Sum( List( deduped_18_1, function ( r_4 )
                                              local hoisted_1_4;
                                              hoisted_1_4 := (hoisted_2_3 * hoisted_3_1[r_4]);
                                              return List( CAP_JIT_INCOMPLETE_LOGIC( hoisted_1_3[r_4] ), function ( x_5 )
                                                      return List( x_5, function ( y_6 )
                                                              return (hoisted_1_4 * y_6);
                                                          end );
                                                  end );
                                          end ) );
                                end ) ), deduped_7_1, deduped_8_1, deduped_19_1 ) );
                fi;
                return;
            end )(  ) );
end
########
        
    , 100 );
    
    ##
    AddZeroMorphism( cat,
        
########
function ( cat_1, a_1, b_1 )
    return CreateCapCategoryMorphismWithAttributes( cat_1, a_1, b_1, MorphismCoefficients, ListWithIdenticalEntries( EnhancedDataTables( cat_1 )[20][ObjectIndex( a_1 )][ObjectIndex( b_1 )], ZeroImmutable( CommutativeRingOfLinearCategory( cat_1 ) ) ) );
end
########
        
    , 100 );
    
    if IsBound( cat!.precompiled_functions_added ) then
        
        # COVERAGE_IGNORE_NEXT_LINE
        Error( "precompiled functions have already been added before" );
        
    fi;
    
    cat!.precompiled_functions_added := true;
    
end );

BindGlobal( "AlgebroidFromDataTablesPrecompiled", function ( data_tables )
  local category_constructor, cat;
    
    category_constructor :=
        
        
        function ( data_tables )
    return AlgebroidFromDataTables( ShallowCopy( data_tables ) );
end;
        
        
    
    cat := category_constructor( data_tables : FinalizeCategory := false, no_precompiled_code := true );
    
    ADD_FUNCTIONS_FOR_AlgebroidFromDataTablesPrecompiled( cat );
    
    Finalize( cat );
    
    return cat;
    
end );
